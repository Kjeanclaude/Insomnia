{
  "_args": [
    [
      {
        "raw": "electron-notifications",
        "scope": null,
        "escapedName": "electron-notifications",
        "name": "electron-notifications",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/home/epsteina/git/Insomnia"
    ]
  ],
  "_from": "electron-notifications@latest",
  "_id": "electron-notifications@1.0.0",
  "_inCache": true,
  "_location": "/electron-notifications",
  "_nodeVersion": "6.3.0",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/electron-notifications-1.0.0.tgz_1488491387000_0.7724937009625137"
  },
  "_npmUser": {
    "name": "blainesch",
    "email": "blainesch@gmail.com"
  },
  "_npmVersion": "3.10.3",
  "_phantomChildren": {},
  "_requested": {
    "raw": "electron-notifications",
    "scope": null,
    "escapedName": "electron-notifications",
    "name": "electron-notifications",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#DEV:/",
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/electron-notifications/-/electron-notifications-1.0.0.tgz",
  "_shasum": "b93613e2333f22aa4f6b9d3275cc9f3cf80f4d22",
  "_shrinkwrap": null,
  "_spec": "electron-notifications",
  "_where": "/home/epsteina/git/Insomnia",
  "author": {
    "name": "Blaine Schmeisser"
  },
  "bugs": {
    "url": "https://github.com/blainesch/electron-notifications/issues"
  },
  "dependencies": {
    "electron-is": "^2.3.0"
  },
  "description": "A node module for sending notifications in electron applications",
  "devDependencies": {
    "electron": "^1.3.4",
    "standard": "^8.0.0"
  },
  "directories": {},
  "dist": {
    "shasum": "b93613e2333f22aa4f6b9d3275cc9f3cf80f4d22",
    "tarball": "https://registry.npmjs.org/electron-notifications/-/electron-notifications-1.0.0.tgz"
  },
  "gitHead": "85e04c60a3b5569bd2af74bd1917ca748cca04f9",
  "homepage": "https://github.com/blainesch/electron-notifications#readme",
  "keywords": [
    "electron",
    "notification",
    "notification center",
    "toaster",
    "growl",
    "notify-send",
    "terminal-notifier",
    "notify"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "blainesch",
      "email": "blainesch@gmail.com"
    }
  ],
  "name": "electron-notifications",
  "optionalDependencies": {},
  "readme": "## Electron Notifications\n\nA node module for sending notifications in electron applications.\n\n![screenshot](assets/screenshot.png)\n\n## Quick Usage\n\n~~~ javascript\nconst notifier = require('electron-notifications')\n\n// Just title\nnotifier.notify('Calendar')\n\n// Full Options\nnotifier.notify('Calendar', {\n  message: 'Event begins in 10 minutes',\n  icon: 'http://cl.ly/J49B/3951818241085781941.png',\n  buttons: ['Dismiss', 'Snooze'],\n})\n~~~\n\n## Installation\n\n~~~\nnpm install --save electron-notifications\n~~~\n\n## Playbook\n\nIf you'd like to see this in action you can run the playbook and try out live\nexamples and edit the code in place.\n\n~~~\ngit clone git@github.com:blainesch/electron-notifications.git\nnpm run playbook\n~~~\n\n## Introduction\n\nWhen you create a new notification, your notification is queued, since we only\ndisplay one at a time. Each notification is a [BrowserWindow](browserwindow)\ninstance, so it's completely cross platform.\n\n## Options\n\nAll options are optional.\n\n* `message`: A message to display under the title.\n* `icon`: The absolute URL of a icon displayed to the left of the text.\n* `buttons`: One or two buttons to display on the right of the notification.\n* `vertical`: Boolean (default: false) that specifies that the buttons should be stacked vertically.\n* `duration`: Integer duration in milliseconds (default: 4000) to show the notification.\n* `flat`: Boolean (default: false) that specifies to use a flat button style notification.\n\n## Events\n\nIn addition to the [events provided by electron](events) you also have access to\nthe following 3 additional events.\n\n\n### Clicked\n\nWhen the notification was clicked, but not dragged. This usually does the\ndefault action, or closes the notification.\n\n~~~ javascript\nconst notification = notifier.notify('Calendar')\n\nnotification.on('clicked', () => {\n  notification.close()\n})\n~~~\n\n### Swiped Right\n\nWhen the notification has been swiped to the right. This usually indicates that\nthe user wants to dismiss the notification.\n\n~~~ javascript\nconst notification = notifier.notify('Calendar')\n\nnotification.on('swipedRight', () => {\n  notification.close()\n})\n~~~\n\n### Button Clicked\n\nWhen any one of the buttons are clicked, it'll trigger a `buttonClicked` event,\nand pass the text, button index and options to the handler.\n\n~~~ javascript\nconst notification = notifier.notify('Calendar', {\n  buttons: ['Dismiss', 'Snooze'],\n  url: \"http://google.com\"\n})\n\nnotification.on('buttonClicked', (text, buttonIndex, options) => {\n  if (text === 'Snooze') {\n    // Snooze!\n  } else if(buttonIndex === 1) {\n    //open options.url\n  }\n  notification.close()\n})\n~~~\n\n[events]: https://github.com/electron/electron/blob/master/docs/api/browser-window.md#events\n[browserwindow]: https://github.com/electron/electron/blob/master/docs/api/browser-window.md\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/blainesch/electron-notifications.git"
  },
  "scripts": {
    "lint": "standard",
    "playbook": "electron playbook/main.js",
    "start": "npm run playbook"
  },
  "standard": {
    "globals": [
      "CodeMirror"
    ],
    "ignore": [
      "playbook/assets/vendor"
    ]
  },
  "version": "1.0.0"
}
